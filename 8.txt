dl8
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense,MaxPooling2D,Conv2D,Flatten
from keras.utils import to_categorical
import numpy as np
(x_train,y_train),(x_test,y_test)=mnist.load_data()
x_train=x_train.reshape((x_train.shape[0],28,28,1)).astype(np.float32)/255
x_test=x_test.reshape((x_test.shape[0],28,28,1)).astype(np.float32)/255
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)
model=Sequential()
model.add(Conv2D(32,kernel_size=(3,3),activation='relu',input_shape=(28,28,1)))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Conv2D(64,kernel_size=(3,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dense(10, activation='softmax')) 
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=5, batch_size=128, verbose=1)
loss, accuracy = model.evaluate(x_test, y_test)
print(f"\nTest Accuracy: {accuracy:.4f}")
import nltk
from nltk import word_tokenize, pos_tag
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger_eng')
nltk.download('punkt_tab')

def identify_svo(sentence):
    words = word_tokenize(sentence)
    tagged = pos_tag(words)
    subject = verb = obj = None
    for word, tag in tagged:
        if not subject and tag.startswith('NN'): 
            subject = word
        elif not verb and tag.startswith('VB'):
            verb = word
        elif subject and verb and tag.startswith('NN') and word != subject:
            obj = word
            break
    return subject, verb, obj

sentence = "John eats an apple."
subject, verb, obj = identify_svo(sentence)
print("Sentence:", sentence)
print("Subject:", subject)
print("Verb:", verb)
print("Object:", obj)

sentence_complex = "The quick brown fox jumps over the lazy dog."
subject_complex, verb_complex, obj_complex = identify_svo(sentence_complex)
print("\nSentence:", sentence_complex)
print("Subject:", subject_complex)
print("Verb:", verb_complex)
print("Object:", obj_complex)

sentence_intransitive = "Birds fly."
subject_intransitive, verb_intransitive, obj_intransitive = identify_svo(sentence_intransitive)
print("\nSentence:", sentence_intransitive)
print("Subject:", subject_intransitive)
print("Verb:", verb_intransitive)
print("Object:", obj_intransitive)